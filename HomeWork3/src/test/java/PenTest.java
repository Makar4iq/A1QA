import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runners.Parameterized;

import java.io.*;
import static org.junit.Assert.*;

public class PenTest {
    private int aneg, a, a1, cnull;
    private double b, c;
    private String color, aword, bword, cword;
    @Before
    public  void setUp(){
        aneg =-40; a =10; b=5.0; c =0.7;a1=1000; cnull=0;
        color = "YELLOW"; aword = "alexandermakarov"; bword="al"; cword="alexandermakar";
    }
    @After
    public void tearDown(){
        aneg=0; a=0; b=0; c=0;cnull=0; color ="";aword="";bword="";cword="";
    }
    @Test (expected = IllegalArgumentException.class )
    public void testPen_NegativeContainerValue() {
        Pen pen = new Pen(aneg, a, color);
    }
    @Test (expected = IllegalArgumentException.class )
    public void testPen_ContainerValueNegativeSizeLetterColor() {
        Pen pen = new Pen(a, aneg, color);
    }
    @Test (expected = IllegalArgumentException.class)
    public void testPen_ContainerValueSizeLetterWithoutColor(){
        Pen pen = new Pen(a, a);
    }
    @Test
    public void testPen_ContainerValueSizeLetterColor() {
        Pen pen = new Pen(a, b, color);
    }
    @Test (expected = IllegalArgumentException.class)
    public void testPen_ContainerValueSizeLetterNullColor() {
        Pen pen = new Pen(a, cnull, color);
    }
    @Test
    public void testPen_ContainerValueNullSizeLetterColor() {
        Pen pen = new Pen(cnull, a, color);
    }

    @Test
    public void testPenIsWork_MaxValue() {
        Pen pen = new Pen(Integer.MAX_VALUE);
        boolean work = pen.isWork();
        assertTrue(work);
    }

    @Test
    public void testPenIsWork_MinValue() {
        Pen pen = new Pen(Integer.MIN_VALUE);
        boolean work = pen.isWork();
        assertFalse(work);
    }

    @Test
    public void testPenIswork_Null() {
        Pen pen = new Pen(cnull);
        boolean work = pen.isWork();
        assertFalse(work);
    }
    @Test
    public void testPen_Write() {
        Pen pen = new Pen(a, b, color);
        assertEquals(pen.write(aword), bword);
    }
    @Test
    public void testPenWrite_PartOfWordWithDoubleSizeLetter() {
        Pen pen = new Pen(a, c, color);
        assertEquals(pen.write(aword),cword );
    }

    @Test
    public void testPenWrite_FullWordWhithMoreInk() {
        Pen pen = new Pen(a1, b, color);
        assertEquals(pen.write(aword), aword);
    }

    @Test
    public void testPenWrite_NullWord() {
        Pen pen = new Pen(a1, b, color);
        assertEquals(pen.write(""), "");
    }

    @Test
    public void testPenGetColor() {
        Pen pen = new Pen(a1, b,color);
        assertEquals(pen.getColor(), color);
    }

    @Test
    public void testPenDoSomethingElse() throws Exception {
        Pen testPenThreeArgs = new Pen(a, b, color);
        File file = new File("test.txt");
        PrintStream ps = new PrintStream(file);
        PrintStream standardOut = System.out;
        System.setOut(ps);
        testPenThreeArgs.doSomethingElse();
        System.setOut(standardOut);
        BufferedReader buf = new BufferedReader(new FileReader(file));
        String line = buf.readLine();
        assertEquals(color, line);
        System.setOut(standardOut);
        ps.close();
        buf.close();
        file.delete();
    }
}

